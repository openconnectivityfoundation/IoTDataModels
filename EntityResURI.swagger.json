{
	"swagger": "2.0",
	"info": {
		"title": "Entity",
		"version": "2021-12-17",
    "license": {
      "name": "OCF Data Model License",
      "url": "https://github.com/openconnectivityfoundation/core/blob/e28a9e0a92e17042ba3e83661e4c0fbce8bdc4ba/LICENSE.md",
      "x-copyright": "copyright 2021 Open Connectivity Foundation, Inc. All rights reserved."
    },
    "termsOfService": "https://openconnectivityfoundation.github.io/core/DISCLAIMER.md"
	},
	"schemes": ["http"],
	"consumes": ["application/json"],
	"produces": ["application/json"],
	"paths": {
		"/EntityResURI": {
			"post": {
				"description": "Contribute entity provisioning information.",
				"parameters":[
					{"$ref": "#/parameters/interface-contributor"},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {"$ref": "#/definitions/schema-contribute"},
						"x-example": {
							"eguid": "00:11:22:33:44:55",
							"ttl": 3600,
							"aliases": ["Mother", "Mom"],
							"rules": [
								{"policy": 3, "uuid": "484b8a51-cb23-46c0-a5f1-b4aebef50ebe", "summary": "Admin provisioning policy"},
								{"policy": 12, "uuid": "e61c3e6b-9c54-4b81-8ce5-f9039c1d04d9", "summary": "Presence contributor policy"},
								{"policy": 5, "uuid": "00000000-0000-0000-0000-000000000000", "summary": "Default to presence viewing + feature provisioning"}
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success path.",
						"x-example": {
							"eguid": "00:11:22:33:44:55",
							"id": "1",
							"rt": ["oic.r.location.contributor"],
							"if": ["oic.if.baseline","oic.if.a"],
							"ttl": 3600,
							"aliases": ["Mother", "Mom"],
							"rules": [
								{"policy": 3, "uuid": "484b8a51-cb23-46c0-a5f1-b4aebef50ebe", "summary": "Admin provisioning policy"},
								{"policy": 12, "uuid": "e61c3e6b-9c54-4b81-8ce5-f9039c1d04d9", "summary": "Presence contributor policy"},
								{"policy": 5, "uuid": "00000000-0000-0000-0000-000000000000", "summary": "Default to presence viewing + feature provisioning"}
							]
						},
						"schema": {"$ref": "#/definitions/schema-contribute"}
					}
				}
			}
		},
		"/EntityResURI/{id}": {
			"get": {
				"description": "Get a specific instance of provisioning information.",
				"parameters": [
					{"$ref": "#/parameters/path-id"},
					{"$ref": "#/parameters/interface-entity"}
				],
				"responses": {
					"200": {
						"description": "Success path.",
						"x-example": {
							"rt": ["oic.r.location.entity"],
							"if": ["oic.if.baseline","oic.if.s"],
							"entity": {
								"eguid": "00:11:22:33:44:55",
								"ttl": 0,
								"aliases": ["Mother", "Mom"]
							},
							"rules": [
								{"policy": 3, "uuid": "484b8a51-cb23-46c0-a5f1-b4aebef50ebe", "summary": "Admin provisioning policy"},
								{"policy": 0, "uuid": "00000000-0000-0000-0000-000000000000", "summary": "Default to no action allowed"}
							],
							"timestamp": "2019-08-22T09:19Z"
						},
						"schema": {"$ref": "#/definitions/schema-get"}
					}
				}
			}
		}
	},
	"parameters": {
		"path-id": {
			"description": "Resource instance id.",
			"in": "path",
			"name": "id",
			"type": "string",
			"required": true
		},
		"interface-entity": {
			"in": "query",
			"name": "if",
			"type": "string",
			"enum": ["oic.if.baseline", "oic.if.s"]
		},
		"interface-contributor": {
			"in": "query",
			"name": "if",
			"type": "string",
			"enum": ["oic.if.baseline", "oic.if.a"]
		}
	},
	"definitions": {
		"entity-guid" : {
			"description": "Globally unique identifier for an entity.",
			"maxLength": 128,
			"type": "string"
		},
		"entity-ttl":  {
			"description": "The time-to-live (in seconds) without refreshed information; a value of 0 specifies forever.",
			"minimum": 0,
			"type": "integer"
		},
		"entity-aliases": {
			"description": "Human readable alternative identities/descriptions (non-unique).",
			"items": {
				"maxLength": 128,
				"type": "string"
			},
			"type": "array"
		},
		"entity-representation": {
			"description": "Entity representation (guid + provisioned operational features).",
			"properties": {
				"eguid": {"$ref": "#/definitions/entity-guid"},
				"ttl": {"$ref": "#/definitions/entity-ttl"},
				"aliases": {"$ref": "#/definitions/entity-aliases"}
			},
			"type": "object",
			"required": ["eguid"]
		},
		"entity-rules": {
			"description": "Ordered set of policy rules for entity information access.",
			"items": {
				"properties": {
					"policy": {
						"description": "Bitmask encoding of entity information actions.",
						"x-detail-desc": [
							"0    - No information access",
							"1    - Allow feature provisioning",
							"2    - Allow policy provisioning",
							"4    - Allow presence viewing",
							"8    - Allow presence contributions",
							"16   - Allow distance viewing",
							"32   - Allow distance contributions",
							"64   - Allow geofence viewing",
							"128  - Allow geofence contributions",
							"256  - Allow position viewing",
							"512  - Allow position contributions"
						],
						"type": "integer",
						"minimum": 0,
						"maximum": 1023
					},
					"uuid": {
						"description": "Device UUID of locationservices client.",
						"pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
						"maxLength": 36,
						"type": "string"
					},
					"summary": {
						"description": "Descriptive summary of policy.",
						"maxLength": 128,
						"type": "string"
					}
				},
				"type": "object",
				"required": ["policy", "uuid"]
			},
			"type": "array"
		},
		"entity-timestamp":  {
			"description": "An RFC3339 formated time indicating when the data was observed (e.g.: 2019-08-22T09:19Z).",
			"format": "date-time",
			"readOnly": true,
			"type": "string"
		},
		"schema-get": {
			"properties": {
				"entity": {"$ref": "#/definitions/entity-representation"},
				"rules": {"$ref": "#/definitions/entity-rules"},
				"rt": {
					"description": "Resource type.",
    					"items": {
	    					"enum": ["oic.r.location.entity"],
						"type": "string"
					},
    					"minItems": 1,
					"readOnly": true,
					"uniqueItems": true,
					"type": "array"
    				},
				"if":  {
					"description": "The OCF interface set supported by this resource.",
					"items": {
						"enum": ["oic.if.baseline","oic.if.s"],
						"type": "string"
					},
					"minItems": 1,
					"readOnly": true,
					"uniqueItems": true,
					"type": "array"
				},
				"timestamp":  {"$ref": "#/definitions/entity-timestamp"}
			},
			"type" : "object"
		},
		"schema-contribute": {
			"properties": {
				"eguid":  {"$ref": "#/definitions/entity-guid"},
				"ttl": {"$ref": "#/definitions/entity-ttl"},
				"aliases": {"$ref": "#/definitions/entity-aliases"},
				"rules": {"$ref" : "#/definitions/entity-rules"},
				"rt": {
					"description": "Resource type.",
    					"items": {
	    					"enum": ["oic.r.location.contributor"],
						"type": "string"
					},
    					"minItems": 1,
					"readOnly": true,
					"uniqueItems": true,
					"type": "array"
    				},
				"if":  {
					"description": "The OCF interface set supported by this resource.",
					"items": {
						"enum":  ["oic.if.baseline","oic.if.a"],
						"type": "string"
					},
					"minItems": 1,
					"readOnly": true,
					"uniqueItems": true,
					"type": "array"
				},
				"id": {"$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.common.properties.core-schema.json#/definitions/id"}
			},
			"type" : "object",
			"required": ["id", "eguid"]
		}
	}
}
